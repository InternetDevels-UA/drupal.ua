Index: locale.inc
===================================================================
RCS file: /cvs/drupal/drupal/includes/locale.inc,v
retrieving revision 1.174.2.9
diff -u -r1.174.2.9 locale.inc
--- locale.inc	18 Jun 2009 12:50:33 -0000	1.174.2.9
+++ locale.inc	4 Aug 2009 23:36:44 -0000
@@ -780,7 +780,7 @@
     'original' => array(
       '#type'  => 'item',
       '#title' => t('Original text'),
-      '#value' => check_plain(wordwrap($source->source, 0)),
+      '#value' => check_plain(drupal_wordwrap($source->source, 0)),
     ),
     'lid' => array(
       '#type'  => 'value',
Index: mail.inc
===================================================================
RCS file: /cvs/drupal/drupal/includes/mail.inc,v
retrieving revision 1.8.2.7
diff -u -r1.8.2.7 mail.inc
--- mail.inc	18 Jun 2009 12:15:44 -0000	1.8.2.7
+++ mail.inc	4 Aug 2009 23:36:49 -0000
@@ -422,9 +422,9 @@
  */
 function _drupal_wrap_mail_line(&$line, $key, $values) {
   // Use soft-breaks only for purely quoted or unindented text.
-  $line = wordwrap($line, 77 - $values['length'], $values['soft'] ? "  \n" : "\n");
+  $line = drupal_wordwrap($line, 77 - $values['length'], $values['soft'] ? "  \n" : "\n");
   // Break really long words at the maximum width allowed.
-  $line = wordwrap($line, 996 - $values['length'], $values['soft'] ? " \n" : "\n");
+  $line = drupal_wordwrap($line, 996 - $values['length'], $values['soft'] ? " \n" : "\n");
 }
 
 /**
Index: unicode.inc
===================================================================
RCS file: /cvs/drupal/drupal/includes/unicode.inc,v
retrieving revision 1.29
diff -u -r1.29 unicode.inc
--- unicode.inc	28 Dec 2007 12:02:50 -0000	1.29
+++ unicode.inc	4 Aug 2009 23:36:30 -0000
@@ -539,4 +539,41 @@
   }
 }
 
+/**
+ * Wraps a UTF-8 string to a given number of characters using a string break character.
+ */
+function drupal_wordwrap($str, $width = 75, $break = "\n", $cut = FALSE) {
+  if ($cut) {
+    while ($len = drupal_strlen($str)) {
+      $chunk = drupal_substr($str, 0, $width);
+      $return .= $chunk;
+      $str = ltrim(drupal_substr($str, $width, $len - $width));
+      if (drupal_strlen($str) > 0) {
+        $return .= $break;
+      }
+    }
+  }
+  else {
+    if (version_compare(phpversion(), '5.2.3') > 0) {
+      $str = preg_split('#\h+#', $str);
+    }
+    else {
+      $str = preg_split('# +#', $str);
+    }
 
+    $len = 0;
+    foreach ($str as $val) {
+      $val .= ' ';
+      $tmp = drupal_strlen($val);
+      $len += $tmp;
+      if ($len >= $width) {
+        $return .= $break . $val;
+        $len = $tmp;
+      }
+      else {
+        $return .= $val;
+      }
+    }
+  }
+  return $return;
+}

