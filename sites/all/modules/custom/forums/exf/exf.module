<?php
// $Id$


/**
 * Implementation of hook_theme().
 */
function exf_theme() {
  return array(
    'exf_forums_page_node' => array('arguments' => array('node' => NULL, 'users' => NULL)),
  );
}


/**
 * Implementation of hook_menu().
 */
function exf_menu() {
  $items = array();
  
  $items['forums'] = array(
    'title' => 'Forums',
    'page callback' => 'exf_forums_page',
    'access arguments' => array('administer forums'),
  );
  
  return $items;
}


/**
 * Implementation of hook_perm().
 */
function exf_perm() {
  return array('access standart forum');
}


/**
 * Implementation of hook_init().
 */
function exf_init() {
  if (arg(0) == 'forum' && !user_access('access standart forum')) {
    drupal_goto('forums');
  }
}


/**
 * Returns a list of forums to which the user has access.
 * @param $uid
 *     User UID.
 */
function _exf_load_forums($uid = 0) {
  static $forums = array();
  global $user;
  
  if (!$uid) {
    $uid = $user->uid;
  }
  
  if (!isset($forums[$uid])) {
    $forums[$uid] = array();
    $result = db_query(    //db_rewrite_sql for the module "Forum access"
      db_rewrite_sql(
      	"SELECT t.tid, t.name, t.description
      	FROM {term_data} t
      	WHERE t.vid = %d",
        't', 'tid'
      ),
      variable_get('forum_nav_vocabulary', '')
    );
    
    while ($row = db_fetch_object($result)) {
      $row->tid = (int)$row->tid;
      $forums[$uid][$row->tid] = $row;
    }
  }
  return $forums[$uid];
}


/**
 * Callback function â€” page display a list of forums.
 */
function exf_forums_page() {
  $forums = _exf_load_forums();
  $forums_tid = array_keys($forums);
  
  $nodes = array();
  $user_accounts = array();
  $nodes_vid = array();
  $result = pager_query("SELECT n.nid, n.vid, n.title, n.uid, n.created,
    tn.tid as forum_tid, ns.last_comment_timestamp, ns.last_comment_uid, ns.comment_count
    FROM {node} n
    LEFT JOIN {term_node} tn USING(nid, vid)
    LEFT JOIN {node_comment_statistics} ns USING (nid)
    WHERE n.status = 1 AND tn.tid IN (". db_placeholders($forums_tid) .")
    ORDER BY n.created DESC",
    10, 0, NULL, $forums_tid
  );
  
  while ($row = db_fetch_object($result)) {
    $nodes[$row->vid] = $row;
    if (!isset($user_accounts[$row->uid])) {
      $user_accounts[$row->uid] = $row->uid;
    }
    if (!isset($user_accounts[$row->last_comment_uid])) {
      $user_accounts[$row->last_comment_uid] = $row->last_comment_uid;
    }
    $nodes_vid[$row->vid] = $row->vid;
  }
  
  $result = db_query("SELECT u.uid, u.name,
    cp.field_first_name_value, cp.field_last_name_value,
    f.filename, f.filepath, f.filesize
    FROM {users} u
    LEFT JOIN {node} n ON n.uid = u.uid AND n.type = 'profile' AND n.status = 1
    LEFT JOIN {content_type_profile} cp ON n.nid = cp.nid AND n.vid = cp.vid
    LEFT JOIN {files} f ON f.fid = cp.field_image_fid AND f.status = 1
    WHERE u.uid IN (". db_placeholders($user_accounts) .")",
    array_keys($user_accounts)
  );
  while ($row = db_fetch_object($result)) {
    $user_accounts[$row->uid] = $row;
  }
  
  $result = db_query("SELECT n.vid as n_vid, t.tid, t.vid, t.name, t.description
    FROM {term_data} t
    LEFT JOIN {term_node} tn USING (tid)
    LEFT JOIN {node} n ON tn.nid = n.nid AND tn.vid = n.vid
    WHERE n.vid IN (". db_placeholders($nodes_vid) .")
    ORDER BY n.vid ASC",
    array_keys($nodes_vid)
  );
  while ($row = db_fetch_object($result)) {
    if (!isset($nodes[$row->n_vid]->terms)) {
      $nodes[$row->n_vid]->terms = array();
    }
    $nodes[$row->n_vid]->terms[$row->tid] = $row;
  }
  
  dpm(array($nodes, $user_accounts));  //FIXME
  
  $output = '';
  
  drupal_add_css(drupal_get_path('module', 'exf') .'/exf.css');
  
  foreach ($nodes as $nid => $node) {
    $output .= '<div id="forums-page">'.
      theme('exf_forums_page_node', $node, $user_accounts)
      .'</div>';  //FIXME
  }
  
  
  $output .= theme('pager');
  return $output;
}




function theme_exf_forums_page_node($node, $users) {
  $output = '<div class="f-node-wrap">
  <div class="f-photo">IMG</div>
  <div class="f-text-wrap">
    <div class="f-user">Username + Date</div>
    <div class="f-title">Node title</div>
    <div class="f-taxonomy">Taxonomy</div>
  </div>
</div>';
  return $output;
}








//

//module_load_include('inc', 'exf');   //FIXME

