<?php


/**
 * Implementation of hook_menu().
 */
function term_filter_menu() {
  $items = array();
  $items['admin/build/term_filter'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('term_filter_settings_form'),
    'title' => 'Term filter settings',
    'description' => 'Configure Term filter module',
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}


/**
 * Settings form.
 */
function term_filter_settings_form($form_state) {
  $form = array();
  $form['contact_information'] = array(
    '#prefix' => '<h3>',
    '#suffix' => '</h3>',
    '#value' => t('When you turn on dictionaries, will activate the blocks with the contents of the dictionary.'),
  );

  $vocabularies = taxonomy_get_vocabularies();
  $term_filter_blocks = variable_get('term_filter_blocks', array());
  
  foreach ($vocabularies as $vid => $voc_value) {
    if (isset($term_filter_blocks[$vid])) {
      $status = $term_filter_blocks[$vid]['status'];
      $select = $term_filter_blocks[$vid]['select'];
      $title = check_plain($term_filter_blocks[$vid]['title']);
      $size = $term_filter_blocks[$vid]['size'];
    }
    else {
      $status = $select = FALSE;
      $title = '';
      $size = 0;
    }
    
    $form['block_'. $vid] = array(
      '#type' => 'fieldset',
      '#title' => $voc_value->name,
    );
    
    $form['block_'. $vid]['status_'. $vid] = array(
      '#type' => 'checkbox', 
      '#title' => t('Create block â€” !name', array(
      	'!name' => '"Term filter: '. $voc_value->name .'-'. $vid .'"',
      )),
      '#description' => t('Vocabulary used in: !types', array(
      	'!types' => implode(', ', array_keys($voc_value->nodes))
      )),
      '#default_value' => $status,
    );
    
    $form['block_'. $vid]['select_'. $vid] = array(
      '#type' => 'checkbox', 
      '#title' => t('Select or Expanded select box?'),
      '#default_value' => $select,
    );
    
    $form['block_'. $vid]['size_'. $vid] = array(
      '#type' => 'textfield',
      '#title' => t('Expandet select size'),
      '#default_value' => $size,
      '#description' => t('Enter 0 to 100% of the height of the list.'),
      '#maxlength' => 2,
      '#size' => 2,
    );
    
    $form['block_'. $vid]['title_'. $vid] = array(
      '#type' => 'textfield',
      '#title' => t('Title select'),
      '#default_value' => $title,
      '#maxlength' => 128,
    );
  }
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}


/**
 * Save Settings.
 */
function term_filter_settings_form_submit($form, &$form_state) {
  unset($form_state['storage']);
  drupal_set_message(t('Preferences have been saved'));
  $vocabularies = taxonomy_get_vocabularies();
  $term_filter_blocks = array();
  
  foreach ($vocabularies as $vid => $voc_value) {
    $term_filter_blocks[$vid]['status'] =
      isset($form_state['values']['status_'. $vid])
      ? $form_state['values']['status_'. $vid] : 0;
    $term_filter_blocks[$vid]['select'] =
      isset($form_state['values']['select_'. $vid])
      ? $form_state['values']['select_'. $vid] : 0;
    $term_filter_blocks[$vid]['title'] =
      isset($form_state['values']['title_'. $vid])
      ? $form_state['values']['title_'. $vid] : '';
    $term_filter_blocks[$vid]['size'] =
      isset($form_state['values']['size_'. $vid])
      ? (int)$form_state['values']['size_'. $vid] : 0;

    if (module_exists('i18nstrings')) {
      if ($term_filter_blocks[$vid]['status']) {
        i18nstrings_update('term_filter:vocabulary:'. $vid .':title', $term_filter_blocks[$vid]['title']);
      }
      else {
        i18nstrings_remove('term_filter:vocabulary:'. $vid .':title');
      }
    }
  }
  variable_set('term_filter_blocks', $term_filter_blocks);
}


/**
 * Implementation of hook_block().
 */
function term_filter_block($op = 'list', $delta = '', $edit = array()) {
  switch ($op) {
    case 'list':
      $term_filter_blocks = variable_get('term_filter_blocks', array());
      $blocks = array();
      if (count($term_filter_blocks)) {
        $vocabularies = taxonomy_get_vocabularies();
        foreach ($term_filter_blocks as $vid => $settings) {
          if ($settings['status']) {
            $blocks['term_filter_block_'. $vid] = array(
            	'info' => 'Term filter: '. $vocabularies[$vid]->name .'-'. $vid,
            );
          }
        }
      }
      return $blocks;

    case 'view':
      $vid = (int)drupal_substr($delta, 18);
      if ($vid) {
        return array(
          'subject' => t('Term filter'),
        	'content' => drupal_get_form('term_filter_switch_form', $vid),
        );
      }
    break;
  }
}


/**
 * Switch term filter form.
 */
function term_filter_switch_form($form_state, $vid = FALSE) {
  $form = array();
  $term_filter_blocks = variable_get('term_filter_blocks', array());
  
  if (isset($term_filter_blocks[$vid]) && $term_filter_blocks[$vid]['status'] == 1) {
    $terms = taxonomy_get_tree($vid);
    $current_terms = term_filter_parse_term();
    $default_value = array();
    $options = array();
    $options[] = t('- None selected -');
    foreach ($terms as $key => $term) {
      $options[$term->tid] = str_repeat('-', $term->depth) .
      (
        module_exists('i18nstrings')
        ? i18nstrings('taxonomy:term:'. $term->tid .':name', $term->name)
        : check_plain($term->name)
      );
      if (in_array($term->tid, $current_terms)) {
        $default_value[] = $term->tid;
      }
    }

    if (!empty($term_filter_blocks[$vid]['title'])) {
      $title = module_exists('i18nstrings') ?
        i18nstrings('term_filter:vocabulary:'. $vid .':title', $term_filter_blocks[$vid]['title'])
        : check_plain($term_filter_blocks[$vid]['title']);
      $form['contact_information'] = array(
        '#prefix' => '<h3 class="term-filter-title term-filter-title-'. $vid .'">',
        '#suffix' => '</h3>',
        '#value' => $title,
      );
    }
    
    if ($term_filter_blocks[$vid]['select']) {
      if (count($default_value)) {
        $default_value = $default_value[0];
      }
      else {
        $default_value = 0;
      }
    }

    $form['term_'. $vid] = array(
      '#type' => 'select',
      '#default_value' => $default_value,
      '#options' => $options,
      '#multiple' => !$term_filter_blocks[$vid]['select'],
    );
    if (!$term_filter_blocks[$vid]['select']) {
      $size = count($options);
      if ($term_filter_blocks[$vid]['size'] > 0 && $term_filter_blocks[$vid]['size'] < $size) {
        $size = $term_filter_blocks[$vid]['size'];
      }
      $form['term_'. $vid]['#size'] = $size;
    }

    drupal_add_js(
  	  "Drupal.behaviors.term_filter_". $vid ." = function() {

  $('#edit-submit-". $vid ."').hide();

  $('#edit-term-". $vid ."').change(function () {
     $('#edit-submit-". $vid ."').click();
  })
}",
      'inline', 'footer'
    );
  }

  $form['vid'] = array(
    '#type' => 'hidden',
    '#value' => $vid,
  );
  
  $form['submit_'. $vid] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}


/**
 * Switch term filter form.
 */
function term_filter_switch_form_submit($form, &$form_state) {
  unset($form_state['storage']);
  $current_terms = term_filter_parse_term();
  $old_terms_count = count($current_terms);
  
  if (isset($form_state['clicked_button']['#post']['vid'])) {
    $vid = $form_state['clicked_button']['#post']['vid'];
    if (isset($form_state['clicked_button']['#post']['term_'. $vid])) {
      //Delete terms current vocabulary
      if (count($current_terms)) {
        $terms = taxonomy_get_tree($vid);
        foreach ($terms as $term) {
          foreach ($current_terms as $key => $value) {
            if ($value == $term->tid) {
              unset($current_terms[$key]);
              break;
            }
          }
          if (!count($current_terms)) {
            break;
          }
        }
      }
  
      $term_filter_blocks = variable_get('term_filter_blocks', array());
      
      if ($term_filter_blocks[$vid]['select']) {
        $value = (int)$form_state['clicked_button']['#post']['term_'. $vid];
        if ($value) {
          $current_terms[] = $value;
        }
      }
      else {
        if (!in_array(0, $form_state['clicked_button']['#post']['term_'. $vid])) {
          foreach ($form_state['clicked_button']['#post']['term_'. $vid] as $value) {
            $current_terms[] = (int)$value;
          }
        }
      }

      $arg = arg();
      $old = count($arg);
      if ($old_terms_count) {
        $old--;
      }
      
      if (count($current_terms)) {
        $arg[$old] = implode(',', $current_terms);
      }
      else {
        if ($old_terms_count) {
          unset($arg[$old]);
        }
      }
      drupal_goto(implode('/', $arg));
    }
  }
}


/**
 * Load last number from URL or return 0.
 */
function term_filter_parse_term() {
  $arg = arg();
  $old = count($arg) - 1;
  if ($old > 0 && preg_match("/^[0-9,]+$/s", $arg[$old])) {
    return explode(',', $arg[$old]);
  }
  return array();
}




