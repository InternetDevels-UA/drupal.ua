#############################################################################
## Sphinx configuration file sample for Drupal
## $Id: sphinx.conf,v 1.3.2.1 2008/09/12 03:36:10 markuspetrux Exp $
##
## It works with main+delta method, plus a distributed index which
## would be used for clients to resolve queries joining main+delta.
##
## Please refer to doc/sphinx.html for more details.
#############################################################################

#############################################################################
## index definitions for music.gsemko.com
##
## - Site on this example uses 2 main indexes and 1 delta. You may need just
##   one main index, 1 main + 1 delta or several mains + 1 delta.
##
## - It is also important to define a distributed index with references to
##   all your local and/or remote indexes. The distributed index is used by
##   sphinxsearch module to resolve queries. It is actually a task for your
##   Sphinx searchd daemon to join these indexes when dealing with search
##   queries sent by the sphinxsearch module on behalf on site users.
##
## - Note that main index names used here contain a numeric suffix that is
##   equal to the id argument passed on to the xmlpipe command.
##
## - If you change this naming scheme for indexes, then you may need to
##   adjust the startup script provided as a sample on the same directory
##   this sphinx.conf sample is located.
##
## - The id argument used in xmlpipe command is used by the XMLPipe
##   generator to identify main indexes while building delta index.
##
## - Arguments to sphinxsearch_xmlpipe.php are:
##
##   mode      : main or delta.
##
##   id        : Numeric identifier of main index. Defaults to 0.
##
##   first_nid : First nid to process for this index (inclusive).
##               Defaults to 0.
##
##   last_nid  : Last nid to process for this index (inclusive).
##               Default to last node in site.
##
##   Notes:
##   - When using mode=delta, the other arguments are ignored. XMLPipe
##     generator will query Sphinx to see which documents should be
##     included.
##   - When using mode=main, it is recommended to specify the other
##     arguments in case defaults don't fit your needs.
##   - Note also that it is required to escape ampersands to not confuse
##     Sphinx shell interpreter of this script.
##
#############################################################################


source source_drupal_to_main0
{
	type					= xmlpipe
	xmlpipe_command			= /usr/bin/wget -O - -q -t 1 "http://drua/sphinxsearch_scripts/sphinxsearch_xmlpipe.php?mode=main&id=0&first_nid=0&last_nid=49999"
}
source source_drupal_to_main1 : source_drupal_to_main0
{
	xmlpipe_command			= /usr/bin/wget -O - -q -t 1 "http://drua/sphinxsearch_scripts/sphinxsearch_xmlpipe.php?mode=main&id=1&first_nid=50000&last_nid=99999"
}
source source_drupal_to_main2 : source_drupal_to_main1
{
	xmlpipe_command			= /usr/bin/wget -O - -q -t 1 "http://drua/sphinxsearch_scripts/sphinxsearch_xmlpipe.php?mode=main&id=2&first_nid=100000&last_nid=149999"
}
source source_drupal_to_main3 : source_drupal_to_main2
{
	xmlpipe_command			= /usr/bin/wget -O - -q -t 1 "http://drua/sphinxsearch_scripts/sphinxsearch_xmlpipe.php?mode=main&id=3&first_nid=150000&last_nid=199999"
}
source source_drupal_to_delta : source_drupal_to_main0
{
	xmlpipe_command			= /usr/bin/wget -O - -q -t 1 "http://drua/sphinxsearch_scripts/sphinxsearch_xmlpipe.php?mode=delta"
}

index index_drupal_to_main0
{
	source					= source_drupal_to_main0
	path					= /home/http/drua/sphinxsearch_scripts/indexes/main0

	docinfo					= extern
	mlock					= 1
#	morphology				= libstemmer_spanish
#	stopwords				= /var/lib/sphinx/stopwords.txt
#	wordforms				= /var/lib/sphinx/wordforms.txt
#	exceptions				= /var/lib/sphinx/exceptions.txt

#morphology = stem_enru
morphology = libstemmer_ru
charset_type = utf-8
charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+0400->U+0435, U+0401->U+0435, U+0402->U+0452, U+0452, U+0403->U+0433, U+0404->U+0454, U+0454, U+0405->U+0455, U+0455, U+0406->U+0456, U+0407->U+0456, U+0457->U+0456, U+0456, U+0408..U+040B->U+0458..U+045B, U+0458..U+045B, U+040C->U+043A, U+040D->U+0438, U+040E->U+0443, U+040F->U+045F, U+045F, U+0450->U+0435, U+0451->U+0435, U+0453->U+0433, U+045C->U+043A, U+045D->U+0438, U+045E->U+0443, U+0460->U+0461, U+0461, U+0462->U+0463, U+0463, U+0464->U+0465, U+0465, U+0466->U+0467, U+0467, U+0468->U+0469, U+0469, U+046A->U+046B, U+046B, U+046C->U+046D, U+046D, U+046E->U+046F, U+046F, U+0470->U+0471, U+0471, U+0472->U+0473, U+0473, U+0474->U+0475, U+0476->U+0475, U+0477->U+0475, U+0475, U+0478->U+0479, U+0479, U+047A->U+047B, U+047B, U+047C->U+047D, U+047D, U+047E->U+047F, U+047F, U+0480->U+0481, U+0481, U+048A->U+0438, U+048B->U+0438, U+048C->U+044C, U+048D->U+044C, U+048E->U+0440, U+048F->U+0440, U+0490->U+0433, U+0491->U+0433, U+0490->U+0433, U+0491->U+0433, U+0492->U+0433, U+0493->U+0433, U+0494->U+0433, U+0495->U+0433, U+0496->U+0436, U+0497->U+0436, U+0498->U+0437, U+0499->U+0437, U+049A->U+043A, U+049B->U+043A, U+049C->U+043A, U+049D->U+043A, U+049E->U+043A, U+049F->U+043A, U+04A0->U+043A, U+04A1->U+043A, U+04A2->U+043D, U+04A3->U+043D, U+04A4->U+043D, U+04A5->U+043D, U+04A6->U+043F, U+04A7->U+043F, U+04A8->U+04A9, U+04A9, U+04AA->U+0441, U+04AB->U+0441, U+04AC->U+0442, U+04AD->U+0442, U+04AE->U+0443, U+04AF->U+0443, U+04B0->U+0443, U+04B1->U+0443, U+04B2->U+0445, U+04B3->U+0445, U+04B4->U+04B5, U+04B5, U+04B6->U+0447, U+04B7->U+0447, U+04B8->U+0447, U+04B9->U+0447, U+04BA->U+04BB, U+04BB, U+04BC->U+04BD, U+04BE->U+04BD, U+04BF->U+04BD, U+04BD, U+04C0->U+04CF, U+04CF, U+04C1->U+0436, U+04C2->U+0436, U+04C3->U+043A, U+04C4->U+043A, U+04C5->U+043B, U+04C6->U+043B, U+04C7->U+043D, U+04C8->U+043D, U+04C9->U+043D, U+04CA->U+043D, U+04CB->U+0447, U+04CC->U+0447, U+04CD->U+043C, U+04CE->U+043C, U+04D0->U+0430, U+04D1->U+0430, U+04D2->U+0430, U+04D3->U+0430, U+04D4->U+00E6, U+04D5->U+00E6, U+04D6->U+0435, U+04D7->U+0435, U+04D8->U+04D9, U+04DA->U+04D9, U+04DB->U+04D9, U+04D9, U+04DC->U+0436, U+04DD->U+0436, U+04DE->U+0437, U+04DF->U+0437, U+04E0->U+04E1, U+04E1, U+04E2->U+0438, U+04E3->U+0438, U+04E4->U+0438, U+04E5->U+0438, U+04E6->U+043E, U+04E7->U+043E, U+04E8->U+043E, U+04E9->U+043E, U+04EA->U+043E, U+04EB->U+043E, U+04EC->U+044D, U+04ED->U+044D, U+04EE->U+0443, U+04EF->U+0443, U+04F0->U+0443, U+04F1->U+0443, U+04F2->U+0443, U+04F3->U+0443, U+04F4->U+0447, U+04F5->U+0447, U+04F6->U+0433, U+04F7->U+0433, U+04F8->U+044B, U+04F9->U+044B, U+04FA->U+0433, U+04FB->U+0433, U+04FC->U+0445, U+04FD->U+0445, U+04FE->U+0445, U+04FF->U+0445, U+0410..U+0418->U+0430..U+0438, U+0419->U+0438, U+0430..U+0438, U+041A..U+042F->U+043A..U+044F, U+043A..U+044F

min_infix_len = 2
enable_star = 1

#	ignore_chars			= U+00AD
#	ngram_len				= 1
#	ngram_chars				= U+3000..U+2FA1F
#	phrase_boundary			= ., ?, !, U+2026 # horizontal ellipsis
#	phrase_boundary_step	= 100

	min_word_len			= 3
#	min_prefix_len			= 3
#	min_infix_len			= 3
#	enable_star				= 1
#	prefix_fields			= content
#	infix_fields			= subject

	html_strip				= 0
#	html_index_attrs		= img=alt,title; a=title;
html_remove_elements = style, script

#	preopen					= 1
}
index index_drupal_to_main1 : index_drupal_to_main0 
{
	source					= source_drupal_to_main1
	path					= /home/http/drua/sphinxsearch_scripts/indexes/main1
}
index index_drupal_to_main2 : index_drupal_to_main1
{
	source					= source_drupal_to_main2
	path					= /home/http/drua/sphinxsearch_scripts/indexes/main2
}
index index_drupal_to_main3 : index_drupal_to_main2
{
	source					= source_drupal_to_main3
	path					= /home/http/drua/sphinxsearch_scripts/indexes/main3
}

index index_drupal_to_delta : index_drupal_to_main0
{
	source					= source_drupal_to_delta
	path					= /home/http/drua/sphinxsearch_scripts/indexes/delta
}
index index_drupal_to_join
{
	type					= distributed
	local					= index_drupal_to_main0
	local					= index_drupal_to_main1
	local					= index_drupal_to_main2
	local					= index_drupal_to_main3
	local					= index_drupal_to_delta
}

#############################################################################
## indexer settings
#############################################################################

indexer
{
	# memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
	# optional, default is 32M, max is 2047M, recommended is 256M to 1024M
	mem_limit				= 512M

	# maximum IO calls per second (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
#	max_iops				= 40

	# maximum IO call size, bytes (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
#	max_iosize				= 1048576
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
	# IP address to bind on
	# optional, default is 0.0.0.0 (ie. listen on all interfaces)
	#
	# address				= 127.0.0.1
	# address				= 192.168.0.1


	# searchd TCP port number
	# mandatory, default is 3312
	port					= 3314
	#listen = localhost:9306:mysql41

	# log file, searchd run info is logged here
	# optional, default is 'searchd.log'
	log						= /home/http/drua/sphinxsearch_scripts/drupal_ua.searchd.log

	# query log file, all search queries are logged here
	# optional, default is empty (do not log queries)
	query_log				= /home/http/drua/sphinxsearch_scripts/drupal_ua.query.log

	# client read timeout, seconds
	# optional, default is 5
	read_timeout			= 5

	# maximum amount of children to fork (concurrent searches to run)
	# optional, default is 0 (unlimited)
	max_children			= 30

	# PID file, searchd process ID file name
	# mandatory
	pid_file				= /home/http/drua/sphinxsearch_scripts/drupal_ua.searchd.pid

	# max amount of matches the daemon ever keeps in RAM, per-index
	# WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
	# default is 1000 (just like Google)
	max_matches				= 1000

	# seamless rotate, prevents rotate stalls if precaching huge datasets
	# optional, default is 1
	seamless_rotate			= 1

	# whether to forcibly preopen all indexes on startup
	# optional, default is 0 (do not preopen)
	preopen_indexes			= 1

	# whether to unlink .old index copies on succesful rotation.
	# optional, default is 1 (do unlink)
	unlink_old				= 1
}
